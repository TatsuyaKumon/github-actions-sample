name: 共通デプロイ処理

on:
  workflow_call:
    inputs:
      # 環境名を呼び出し元から引数で受け取る
      environment_name:
        required: true
        type: string

jobs:
  deploy:
    name: デプロイ

    # 引数で受け取った環境名をセット
    environment:
      name: ${{ inputs.environment_name }}

    # 実行OS
    runs-on: ubuntu-latest

    # タイムアウト（分）
    timeout-minutes: 15

    # ステップ
    steps:
      # ブランチのチェックアウト
      - name: Checkout
        uses: actions/checkout@v4

      # Node.jsインストール
      - name: Setup Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: 20

      # claspインストール
      - name: Install Clasp
        run: |
          npm init -y
          npm install clasp -g

      # clasp認証ファイル .clasprc.json 作成
      - name: Create .clasprc.json
        env:
          CLASPRC_JSON: ${{ secrets.CLASPRC_JSON }}
        run: |
          echo $CLASPRC_JSON > ~/.clasprc.json

      # claspデプロイ先設定ファイル .clasp.json を上書きする（環境変数CLASP_JSONの設定有無により実行判定）
      - name: Overwrite .clasp.json
        # 環境変数CLASP_JSONが設定されている場合のみ実行
        if: ${{ vars.CLASP_JSON != null }}
        env:
          CLASP_JSON: ${{ vars.CLASP_JSON }}
        run: |
          echo $CLASP_JSON > ./.clasp.json

      # マニフェストファイルを上書きする（.github/manifest/{環境名}_appsscript.jsonの有無により実行判定）
      - name: Overwrite manifest file
        # コピー元ファイルが存在する場合のみ実行
        if: ${{ hashFiles(format('./.github/manifest/{0}_appsscript.json', inputs.environment_name)) != '' }}
        run: |
          cp ./.github/manifest/${{ inputs.environment_name }}_appsscript.json ./src/appsscript.json

      # サマリ出力（デプロイする前に各種情報をSUMMARYに出力する）
      - name: Output summary
        run: |
          # 各種ファイル読み込み
          CLASPRC_JSON=`cat ~/.clasprc.json`
          CLASP_JSON=`cat ./.clasp.json`
          MANIFEST=`cat ./src/appsscript.json`
          # 読み込み内容出力
          echo "## .clasprc.json" >> $GITHUB_STEP_SUMMARY
          echo "セキュリティ情報のためファイル内容がマスクされています。何も出力されていない場合はファイル内容が空であることを示しています。" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          echo -e "$CLASPRC_JSON" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          echo "## .clasp.json" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          echo -e "$CLASP_JSON" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          echo "## appsscript.json" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          echo -e "$MANIFEST" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY

      # clasp push実行
      # 1.clasp pushを実行し、その標準出力＋標準エラー出力を変数にセットする
      # 2.変数を出力する
      # 3.$GITHUB_OUTPUTにセット（複数行用の書式）
      - name: Clasp push
        id: clasp_push
        run: |
          RESULT=`clasp push -f 2>&1`
          echo -e "$RESULT"
          {
            echo "result<<EOF"
            echo "$RESULT"
            echo "EOF"
          }  >> $GITHUB_OUTPUT

      # clasp pushが失敗した場合にjobをエラー終了させるためのstep
      - name: Failed clasp push
        # clasp pushの結果に「Push failed」が含まれている、もしくは、「Error retrieving」で始まる場合は失敗したと判断
        if: ${{ contains(steps.clasp_push.outputs.result, 'Push failed') || startsWith(steps.clasp_push.outputs.result, 'Error retrieving') }}
        run: |
          exit 1
